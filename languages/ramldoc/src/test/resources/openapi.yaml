openapi: "3.0.0"
info:
  title: Commercetools OAuth API
  version: 1

servers:
  - url: https://auth.europe-west1.gcp.commercetools.com

paths:
  /oauth/introspect:
    post:
      tags:
        - "oauth"
        - "introspect"
      operationId: OauthIntrospectPost
      parameters:
        - name: token
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json: {}
  /oauth/token:
    post:
      tags:
        - "oauth"
        - "token"
      operationId: OauthTokenPost
      parameters:
        - name: grant_type
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: refresh_token
          in: query
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: scope
          in: query
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json: {}
        401:
          description: |-
            Unauthorized
          content: {}
  /oauth/{projectKey}/anonymous/token:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - "oauth"
        - "projectKey"
        - "anonymous"
        - "token"
      operationId: OauthByProjectKeyAnonymousTokenPost
      description: |-
        To obtain an access token for an Anonymous Session, the OAuth client needs the create_anonymous_token scope.
        The regular Client Credentials Flow is used.

        These access tokens are similar to those issued with the Password Flow, but they are not associated with a
        customer but with an anonymousId. In addition to the access token, a refresh token is issued. The refresh
        token is the only way to get a new access token for this particular anonymousId.

        The anonymousId is either generated by the API or an unused id may be supplied with the optional parameter
        anonymous_id.
      parameters:
        - name: grant_type
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: ClientCredentialsType
          explode: true
        - name: anonymous_id
          in: query
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: scope
          in: query
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json: {}
        401:
          description: |-
            Unauthorized
          content: {}
  /oauth/{projectKey}/customers/token:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - "oauth"
        - "projectKey"
        - "customers"
        - "token"
      operationId: OauthByProjectKeyCustomersTokenPost
      description: |-
        To obtain an access token through the password flow, you need to provide the email and unencrypted
        password of the customer in addition to your OAuth client credentials.

        In addition to the access token, a refresh token is issued. The refresh token may be used to get a
        new access token without supplying email and password if the access token has expired.
      parameters:
        - name: grant_type
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: PasswordType
          explode: true
        - name: username
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: password
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
        - name: scope
          in: query
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json: {}
        401:
          description: |-
            Unauthorized
          content: {}
