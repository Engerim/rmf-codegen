{"version":3,"file":"commercetools-api-request-builder.umd.min.js","sources":["../src/features.js","../src/default-services.js","../src/default-params.js","../src/version.js","../src/data-erasure.js","../src/order-edit-apply.js","../src/query.js","../src/query-id.js","../src/query-location.js","../src/query-expand.js","../src/query-page.js","../src/query-projection.js","../src/query-suggest.js","../src/query-search.js","../src/create-service.js","../src/classify.js","../src/build-query-string.js","../src/create-request-builder.js"],"sourcesContent":["/**\n * NOTE:\n *  These are so called implicit features\n *  which work on endpoints automatically as they only\n *  differ in the http method and request body\n *  and do not need any further processing.\n *  We specify these on endpoints for documentation purposes\n *  only.\n */\nexport const create = 'create'\nexport const update = 'update'\n// `delete` is a reserved word in JavaScript\nexport const del = 'delete'\n\n/**\n * NOTE:\n *  These are so called explicit features\n *  which only work on a subset of endpoints and perform\n *  additional manipulation on the request.\n */\nexport const query = 'query'\nexport const queryOne = 'queryOne'\nexport const queryExpand = 'queryExpand'\nexport const queryLocation = 'queryLocation'\nexport const search = 'search'\nexport const projection = 'projection'\nexport const suggest = 'suggest'\n","import * as features from './features'\n\nexport default {\n  login: {\n    type: 'login',\n    endpoint: '/login',\n    features: [features.create],\n  },\n  cartDiscounts: {\n    type: 'cart-discounts',\n    endpoint: '/cart-discounts',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  carts: {\n    type: 'carts',\n    endpoint: '/carts',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  categories: {\n    type: 'categories',\n    endpoint: '/categories',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  channels: {\n    type: 'channels',\n    endpoint: '/channels',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  customerGroups: {\n    type: 'customer-groups',\n    endpoint: '/customer-groups',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  customers: {\n    type: 'customers',\n    endpoint: '/customers',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  customersPassword: {\n    type: 'customers-password',\n    endpoint: '/customers/password',\n    features: [features.create],\n  },\n  customersPasswordToken: {\n    type: 'customers-password-token',\n    endpoint: '/customers/password-token',\n    features: [features.create, features.queryOne],\n  },\n  customersPasswordReset: {\n    type: 'customers-password-reset',\n    endpoint: '/customers/password/reset',\n    features: [features.create],\n  },\n  customersEmailVerificationToken: {\n    type: 'customers-email-verification-token',\n    endpoint: '/customers/customers/email-token',\n    features: [features.create, features.queryOne],\n  },\n  customersEmailVerification: {\n    type: 'customers-email-verification',\n    endpoint: '/customers/customers/email/confirm',\n    features: [features.create],\n  },\n  customObjects: {\n    type: 'custom-objects',\n    endpoint: '/custom-objects',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n    ],\n  },\n  discountCodes: {\n    type: 'discount-codes',\n    endpoint: '/discount-codes',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  extensions: {\n    type: 'extensions',\n    endpoint: '/extensions',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  inventory: {\n    type: 'inventory',\n    endpoint: '/inventory',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  messages: {\n    type: 'messages',\n    endpoint: '/messages',\n    features: [features.query, features.queryOne, features.queryExpand],\n  },\n  myActiveCart: {\n    type: 'my-carts',\n    endpoint: '/me/active-cart',\n    features: [features.queryOne],\n  },\n  myCarts: {\n    type: 'my-carts',\n    endpoint: '/me/carts',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  myOrders: {\n    type: 'my-orders',\n    endpoint: '/me/orders',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  orders: {\n    type: 'orders',\n    endpoint: '/orders',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  orderEdits: {\n    type: 'orders-edits',\n    endpoint: '/orders/edits',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  orderImport: {\n    type: 'orderImport',\n    endpoint: '/orders/import',\n    features: [features.create, features.query],\n  },\n  payments: {\n    type: 'payments',\n    endpoint: '/payments',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  productDiscounts: {\n    type: 'product-discounts',\n    endpoint: '/product-discounts',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  productProjections: {\n    type: 'product-projections',\n    endpoint: '/product-projections',\n    features: [\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n      features.projection,\n    ],\n  },\n  productProjectionsSearch: {\n    type: 'product-projections-search',\n    endpoint: '/product-projections/search',\n    features: [\n      features.search,\n      features.queryOne,\n      features.queryExpand,\n      features.projection,\n    ],\n  },\n  productProjectionsSuggest: {\n    type: 'product-projections-suggest',\n    endpoint: '/product-projections/suggest',\n    features: [\n      features.search,\n      features.suggest,\n      features.queryOne,\n      features.projection,\n    ],\n  },\n  products: {\n    type: 'products',\n    endpoint: '/products',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  productTypes: {\n    type: 'product-types',\n    endpoint: '/product-types',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  project: {\n    type: 'project',\n    endpoint: '/',\n    features: [features.update, features.query],\n  },\n  reviews: {\n    type: 'reviews',\n    endpoint: '/reviews',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  shippingMethods: {\n    type: 'shipping-methods',\n    endpoint: '/shipping-methods',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n      features.queryLocation,\n    ],\n  },\n  shoppingLists: {\n    type: 'shopping-lists',\n    endpoint: '/shopping-lists',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  states: {\n    type: 'states',\n    endpoint: '/states',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  subscriptions: {\n    type: 'subscriptions',\n    endpoint: '/subscriptions',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  taxCategories: {\n    type: 'tax-categories',\n    endpoint: '/tax-categories',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  types: {\n    type: 'types',\n    endpoint: '/types',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n  zones: {\n    type: 'zones',\n    endpoint: '/zones',\n    features: [\n      features.create,\n      features.update,\n      features.del,\n      features.query,\n      features.queryOne,\n      features.queryExpand,\n    ],\n  },\n}\n","/* @flow */\nimport type {\n  ServiceBuilderDefaultParams,\n  ServiceBuilderParams,\n} from 'types/sdk'\nimport * as features from './features'\n\n/**\n * Return the default parameters for building a query string.\n *\n * @return {Object}\n */\nexport function getDefaultQueryParams(): ServiceBuilderDefaultParams {\n  return {\n    id: null,\n    expand: [],\n    pagination: {\n      page: null,\n      perPage: null,\n      sort: [],\n      withTotal: null,\n    },\n    location: {\n      currency: '',\n      country: '',\n      state: '',\n    },\n    query: {\n      operator: 'and',\n      where: [],\n    },\n    searchKeywords: [],\n  }\n}\n\n/**\n * Return the default parameters for building a query search string.\n *\n * @return {Object}\n */\nexport function getDefaultSearchParams(): ServiceBuilderDefaultParams {\n  return {\n    expand: [],\n    searchKeywords: [],\n    pagination: {\n      page: null,\n      perPage: null,\n      sort: [],\n      withTotal: null,\n    },\n    search: {\n      facet: [],\n      filter: [],\n      filterByQuery: [],\n      filterByFacets: [],\n      fuzzy: false,\n      fuzzyLevel: 0,\n      markMatchingVariants: false,\n      text: null,\n    },\n  }\n}\n\n/**\n * Set the default parameters given the current service object.\n *\n * @return {void}\n */\nexport function setDefaultParams() {\n  this.params.expand = getDefaultQueryParams().expand\n\n  if (this.features.includes(features.queryOne))\n    this.params.id = getDefaultQueryParams().id\n\n  if (this.features.includes(features.query)) {\n    this.params.pagination = getDefaultQueryParams().pagination\n    this.params.query = getDefaultQueryParams().query\n  }\n\n  if (this.features.includes(features.search)) {\n    this.params.pagination = getDefaultSearchParams().pagination\n    this.params.search = getDefaultSearchParams().search\n  }\n\n  if (this.features.includes(features.queryLocation))\n    this.params.location = getDefaultQueryParams().location\n\n  if (this.features.includes(features.suggest)) this.params.searchKeywords = []\n}\n\nconst hasKey = (obj: {}, key: string): boolean =>\n  Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * Set the supplied parameters given the current service object.\n *\n * @return {void}\n */\nexport function setParams(params: ServiceBuilderParams) {\n  // verify params\n  const knownKeys = [\n    'expand',\n    'id',\n    'key',\n    'customerId',\n    'cartId',\n    'sort',\n    'page',\n    'perPage',\n    'staged',\n    'priceCurrency',\n    'priceCountry',\n    'priceCustomerGroup',\n    'priceChannel',\n    'text',\n    'fuzzy',\n    'fuzzyLevel',\n    'markMatchingVariants',\n    'facet',\n    'filter',\n    'filterByQuery',\n    'filterByFacets',\n    'searchKeywords',\n    'where',\n    'whereOperator',\n    'version',\n    'country',\n    'currency',\n    'state',\n    'dataErasure',\n    'withTotal',\n    'applyOrderEditTo',\n  ]\n  Object.keys(params).forEach((key: string) => {\n    if (!knownKeys.includes(key)) throw new Error(`Unknown key \"${key}\"`)\n  })\n\n  // query-expand\n  if (params.expand)\n    params.expand.forEach((expansion: string) => {\n      this.expand(expansion)\n    })\n\n  // query-id\n  if (hasKey(params, 'id')) this.byId(params.id)\n  if (hasKey(params, 'key')) this.byKey(params.key)\n  if (hasKey(params, 'customerId')) this.byCustomerId(params.customerId)\n  if (hasKey(params, 'cartId')) this.byCartId(params.cartId)\n\n  // query-location\n  if (hasKey(params, 'country')) this.byCountry(params.country)\n  if (hasKey(params, 'currency')) this.byCurrency(params.currency)\n  if (hasKey(params, 'state')) this.byState(params.state)\n\n  // query-page\n  if (params.sort)\n    params.sort.forEach(\n      (sortDesc: { by: string, direction: 'asc' | 'desc' }) => {\n        this.sort(sortDesc.by, sortDesc.direction === 'asc')\n      }\n    )\n  if (hasKey(params, 'page')) this.page(params.page)\n  if (hasKey(params, 'perPage')) this.perPage(params.perPage)\n\n  // query-projection\n  if (hasKey(params, 'staged')) this.staged(params.staged)\n  if (hasKey(params, 'priceCurrency')) this.priceCurrency(params.priceCurrency)\n  if (hasKey(params, 'priceCountry')) this.priceCountry(params.priceCountry)\n  if (hasKey(params, 'priceCustomerGroup'))\n    this.priceCustomerGroup(params.priceCustomerGroup)\n  if (hasKey(params, 'priceChannel')) this.priceChannel(params.priceChannel)\n\n  // query-search\n  if (params.text) this.text(params.text.value, params.text.language)\n  if (params.fuzzy) this.fuzzy() // boolean switch\n  if (hasKey(params, 'fuzzyLevel')) this.fuzzyLevel(params.fuzzyLevel)\n  if (params.markMatchingVariants) this.markMatchingVariants() // boolean switch\n  if (params.facet)\n    params.facet.forEach((facet: string) => {\n      this.facet(facet)\n    })\n  if (params.filter)\n    params.filter.forEach((filter: string) => {\n      this.filter(filter)\n    })\n  if (params.filterByQuery)\n    params.filterByQuery.forEach((query: string) => {\n      this.filterByQuery(query)\n    })\n  if (params.filterByFacets)\n    params.filterByFacets.forEach((facet: string) => {\n      this.filterByFacets(facet)\n    })\n\n  // query-suggest\n  if (params.searchKeywords)\n    params.searchKeywords.forEach(\n      (searchKeyword: { value: string, language: string }) => {\n        this.searchKeywords(searchKeyword.value, searchKeyword.language)\n      }\n    )\n\n  // query\n  if (params.where)\n    params.where.forEach((predicate: string) => {\n      this.where(predicate)\n    })\n  if (hasKey(params, 'whereOperator')) this.whereOperator(params.whereOperator)\n\n  // version\n  if (hasKey(params, 'version')) this.withVersion(params.version)\n\n  // dataErasure\n  if (hasKey(params, 'dataErasure')) this.withFullDataErasure()\n\n  // withTotal\n  if (hasKey(params, 'withTotal')) this.withTotal(params.withTotal)\n\n  // withTotal\n  if (hasKey(params, 'applyOrderEditTo'))\n    this.applyOrderEditTo(params.applyOrderEditTo)\n}\n","/* @flow */\n/**\n * Set the `version` number to the internal state of the service instance\n * in order to generate a uri with the resource version (for example; to\n * perform a `DELETE` request)\n *\n * @param  {number} version - The version of the resource\n * @throws if `version` is missing or not a number.\n * @return {Object} The instance of the service, can be chained.\n */\n\nexport default function withVersion(version: number): Object {\n  if (typeof version !== 'number')\n    throw new Error('A resource version is missing or invalid')\n  this.params.version = version\n  return this\n}\n","/* @flow */\n/**\n * Set the `dataErasure` option to the internal state of the service instance\n * in order to generate a DELETE uri that guarantees that all personal data related to\n * the particular object, including invisible data, is erased, in compliance with the GDPR.\n *\n * Users are, however, responsible for identifying and deleting all objects that belong to a customer, and deleting them.\n *\n * More info here: https://docs.commercetools.com/release-notes#releases-2018-05-24-data-erasure\n *\n * @return {Object} The instance of the service, can be chained.\n */\n\nexport default function withFullDataErasure(): Object {\n  this.params.dataErasure = 'dataErasure=true'\n  return this\n}\n","/* @flow */\n/**\n * `Apply an OrderEdit` to an `order` by providing a correct Order Edit ID\n *\n * More info here: https://docs.commercetools.com/http-api-projects-order-edits#apply-an-orderedit\n *\n * @param {string} orderEditId - The ID of the Order Edit.\n *\n * @return {Object} The instance of the service, can be chained.\n */\n\nexport default function applyOrderEditTo(orderEditId: string): Object {\n  if (typeof orderEditId !== 'string')\n    throw new Error('A resource orderEditId is missing or invalid')\n  this.params.applyOrderEditTo = orderEditId\n  return this\n}\n","/**\n * Set the given `predicate` to the internal state of the service instance.\n *\n * @param  {string} predicate - A non-URI encoded string representing a\n * [Predicate]{@link http://dev.sphere.io/http-api.html#predicates}\n * @throws If `predicate` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function where(predicate: string): Object {\n  if (!predicate) throw new Error('Required argument for `where` is missing')\n\n  const encodedPredicate = encodeURIComponent(predicate)\n  this.params.query.where.push(encodedPredicate)\n  return this\n}\n\n/**\n * Set the logical operator to combine multiple query predicates\n * {@link module:commons/query.where}\n *\n * @param  {string} operator - A logical operator `and`, `or`\n * @throws If `operator` is missing or has a wrong value.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function whereOperator(operator: 'and' | 'or'): Object {\n  if (!operator)\n    throw new Error('Required argument for `whereOperator` is missing')\n  if (!(operator === 'and' || operator === 'or'))\n    throw new Error(\n      'Required argument for `whereOperator` is invalid, ' +\n        'allowed values are (`and`, `or`)'\n    )\n\n  this.params.query.operator = operator\n  return this\n}\n","/* @flow */\n/**\n * Set the given `id` to the internal state of the service instance.\n *\n * @param  {string} id - A resource `UUID`\n * @throws If `id` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byId(id: string): Object {\n  if (!id) throw new Error('Required argument for `byId` is missing')\n  if (this.params.key)\n    throw new Error(\n      'A key for this resource has already been set. ' +\n        'You cannot use both `byKey` and `byId`.'\n    )\n  if (this.params.customerId)\n    throw new Error(\n      'A customerId for this resource has already been set. ' +\n        'You cannot use both `byId` and `byCustomerId`.'\n    )\n\n  if (this.params.cartId)\n    throw new Error(\n      'A cartId for this resource has already been set. ' +\n        'You cannot use both `byId` and `byCartId`.'\n    )\n\n  this.params.id = id\n  return this\n}\n\n/**\n * Set the given `key` to the internal state of the service instance.\n *\n * @param  {string} key - A resource `key`\n * @throws If `key` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byKey(key: string): Object {\n  if (!key) throw new Error('Required argument for `byKey` is missing')\n  if (this.params.id)\n    throw new Error(\n      'An ID for this resource has already been set. ' +\n        'You cannot use both `byId` and `byKey`.'\n    )\n\n  this.params.key = key\n  return this\n}\n\n/**\n * Set the given `id` to the `customerId`internal state of the service instance.\n * For querying customer carts\n *\n * @param  {string} id - A resource `UUID`\n * @throws If `id` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byCustomerId(custId: string): Object {\n  if (!custId)\n    throw new Error('Required argument for `byCustomerId` is missing')\n  if (this.params.id)\n    throw new Error(\n      'An ID for this resource has already been set. ' +\n        'You cannot use both `byId` and `byCustomerId`.'\n    )\n\n  this.params.customerId = custId\n  return this\n}\n\n/**\n * Set the given `id` to the `cartId` internal state of the service instance.\n * For querying shipping methods by cart id\n *\n * @param  {string} id - A resource `UUID`\n * @throws If `id` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byCartId(cartId: string): Object {\n  if (!cartId) throw new Error('Required argument for `byCartId` is missing')\n  if (this.params.id)\n    throw new Error(\n      'An ID for this resource has already been set. ' +\n        'You cannot use both `byId` and `byCartId`.'\n    )\n\n  this.params.cartId = cartId\n  return this\n}\n","/* @flow */\n\n/**\n * Set the given `country` param used for selection by country\n *\n * @param  {string} value - A two-digit country code as per ISO 3166-1 alpha-2\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byCountry(value: string): Object {\n  if (!value) throw new Error('Required argument for `byCountry` is missing')\n\n  this.params.location.country = value\n  return this\n}\n\n/**\n * Set the given `currency` param used for selection by currency.\n *\n * @param  {string} value - The currency code compliant to ISO 4217\n * Can only be used with country parameter\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byCurrency(value: string): Object {\n  if (!value) throw new Error('Required argument for `byCurrency` is missing')\n\n  // logic to verify country has been set\n  if (!this.params.location.country)\n    throw new Error(\n      'A `country` for this resource has not been set. ' +\n        'You must set the country in order to use the `byCurrency` method.'\n    )\n\n  this.params.location.currency = value\n  return this\n}\n\n/**\n * Set the given `state` param used for selection by state.\n *\n * @param  {string} value - A string representing State name\n * Can only be used with country parameter\n * @return {Object} The instance of the service, can be chained.\n */\nexport function byState(value: string): Object {\n  if (!value) throw new Error('Required argument for `byState` is missing')\n\n  // logic to verify country has been set\n  if (!this.params.location.country)\n    throw new Error(\n      'A `country` for this resource has not been set. ' +\n        'You must set the country in order to use the `byState` method.'\n    )\n\n  this.params.location.state = value\n  return this\n}\n","/* @flow */\n/**\n * Set the\n * [ExpansionPath](http://dev.sphere.io/http-api.html#reference-expansion)\n * used for expanding a\n * [Reference](http://dev.sphere.io/http-api-types.html#reference)\n * of a resource.\n *\n * @param  {string} value - The expand path expression.\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function expand(value: string): Object {\n  if (!value) throw new Error('Required argument for `expand` is missing')\n\n  const encodedPath = encodeURIComponent(value)\n  // Note: this goes to base `params`, not `params.query`\n  // to be compatible with search.\n  this.params.expand.push(encodedPath)\n  return this\n}\n","/* @flow */\n/**\n * Set the sort expression for the query, if the related endpoint supports it.\n * It is possible to specify several `sort` parameters.\n * In this case they are combined into a composed `sort` where the results\n * are first sorted by the first expression, followed by equal values being\n * sorted according to the second expression, and so on.\n *\n * @param  {string} sortPath - The sort path expression.\n * @param  {boolean} [ascending] - Whether the direction should be\n * ascending or not (default: `true`).\n * @throws If `sortPath` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function sort(sortPath: string, ascending: boolean = true): Object {\n  if (!sortPath) throw new Error('Required argument for `sort` is missing')\n\n  const direction = ascending ? 'asc' : 'desc'\n  const encodedSort = encodeURIComponent(`${sortPath} ${direction}`)\n  this.params.pagination.sort.push(encodedSort)\n  return this\n}\n\n/**\n * Set the page number to be requested from the complete query result\n * (used for pagination as `offset`)\n *\n * @param  {string} value - The page number, greater then zero.\n * @throws If `value` is missing or is a number lesser then one.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function page(value: number): Object {\n  if (typeof value !== 'number' && !value)\n    throw new Error('Required argument for `page` is missing or invalid')\n\n  if (typeof value !== 'number' || value < 1)\n    throw new Error('Required argument for `page` must be a number >= 1')\n\n  this.params.pagination.page = value\n  return this\n}\n\n/**\n * Set the number of results to be returned from a query result\n * (used for pagination as `limit`)\n *\n * @param  {string} value - How many results in a page,\n * greater or equals then zero.\n * @throws If `value` is missing or is a number lesser then zero.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function perPage(value: number): Object {\n  if (typeof value !== 'number' && !value)\n    throw new Error('Required argument for `perPage` is missing or invalid')\n\n  if (typeof value !== 'number' || value < 0)\n    throw new Error('Required argument for `perPage` must be a number >= 0')\n\n  this.params.pagination.perPage = value\n  return this\n}\n\n/**\n * Set whether or not the total should be calculated (and included) in the result\n * of a paginated query result.\n *\n * @param {boolean} value - indicating if the total should be included or not\n */\nexport function withTotal(value: boolean = true): Object {\n  if (typeof value !== 'boolean')\n    throw new Error('Required argument for `withTotal` is missing or invalid')\n\n  this.params.pagination.withTotal = value\n  return this\n}\n","/* @flow */\n/**\n * Define whether to get the staged or current projection\n *\n * @param  {boolean} staged - Either `true` (default) or `false`\n * (for current / published)\n * @return {Object} The instance of the service, can be chained.\n */\nexport function staged(shouldFetchStaged: boolean = false): Object {\n  this.params.staged = shouldFetchStaged\n  return this\n}\n\n/**\n * Define whether to set price Selection or not\n * Set the given `priceCurrency` param used for price selection.\n *\n * @param  {string} value - The currency code compliant to ISO 4217\n * @return {Object} The instance of the service, can be chained.\n */\nexport function priceCurrency(value: string): Object {\n  this.params.priceCurrency = value\n  return this\n}\n\n/**\n * Define whether to set price Selection or not\n * Set the given `priceCountry` param used for price selection.\n *\n * @param  {string} value - A two-digit country code as per ISO 3166-1 alpha-2\n * Can only be used with priceCurrency parameter\n * @return {Object} The instance of the service, can be chained.\n */\nexport function priceCountry(value: string): Object {\n  this.params.priceCountry = value\n  return this\n}\n\n/**\n * Define whether to set price Selection or not\n * Set the given `priceCustomerGroup` param used for price selection.\n *\n * @param  {string} value - price customer group UUID\n * Can only be used with priceCurrency parameter\n * @return {Object} The instance of the service, can be chained.\n */\nexport function priceCustomerGroup(value: string): Object {\n  this.params.priceCustomerGroup = value\n  return this\n}\n\n/**\n * Define whether to set price Selection or not\n * Set the given `priceChannel` param used for price selection.\n *\n * @param  {string} value - price channel UUID\n * Can only be used with priceCurrency parameter\n * @return {Object} The instance of the service, can be chained.\n */\nexport function priceChannel(value: string): Object {\n  this.params.priceChannel = value\n  return this\n}\n","/* @flow */\n/**\n * Define a Suggestion used for matching tokens for product projections,\n * via a suggest tokenizer.\n *\n * The suggestions can be used to implement a basic auto-complete functionality.\n * The source of data for suggestions is the searchKeyword field in a product.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * text to search for.\n * @param  {string} lang - An ISO language tag, used for search\n * the given text in localized content.\n * @throws If `value` or `lang` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function searchKeywords(value: string, lang: string): Object {\n  if (!value || !lang)\n    throw new Error('Required arguments for `searchKeywords` are missing')\n\n  this.params.searchKeywords.push({ lang, value: encodeURIComponent(value) })\n  return this\n}\n","/* @flow */\n/**\n * Set the given `text` param used for full-text search.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * text to search for.\n * @param  {string} lang - An ISO language tag, used for search\n * the given text in localized content.\n * @throws If `value` or `lang` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function text(value: string, lang: string): Object {\n  if (!value || !lang)\n    throw new Error('Required arguments for `text` are missing')\n\n  this.params.search.text = { lang, value: encodeURIComponent(value) }\n  return this\n}\n\n/**\n * Define whether to enable the fuzzy search.\n *\n * @return {Object} The instance of the service, can be chained.\n */\nexport function fuzzy(): Object {\n  this.params.search.fuzzy = true\n  return this\n}\n\n/**\n * Define the level of the fuzzy search\n *\n * @param  {number} value - An integer representing the fuzzy level\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function fuzzyLevel(value: number): Object {\n  if (!value) throw new Error('Required argument for `fuzzyLevel` is missing')\n  this.params.search.fuzzyLevel = value\n  return this\n}\n\n/**\n * Define whether to enable markMatchingVariants\n *\n * @return {Object} The instance of the service, can be chained.\n */\nexport function markMatchingVariants(): Object {\n  this.params.search.markMatchingVariants = true\n  return this\n}\n\n/**\n * Set the given `facet` filter used for calculating statistical counts.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * facet expression.\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function facet(value: string): Object {\n  if (!value) throw new Error('Required argument for `facet` is missing')\n\n  const encodedFacet = encodeURIComponent(value)\n  this.params.search.facet.push(encodedFacet)\n  return this\n}\n\n/**\n * Set the given `filter` param used for filtering search results.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * filter expression.\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function filter(value: string): Object {\n  if (!value) throw new Error('Required argument for `filter` is missing')\n\n  const encodedFilter = encodeURIComponent(value)\n  this.params.search.filter.push(encodedFilter)\n  return this\n}\n\n/**\n * Set the given `filter.query` param used for filtering search results.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * filter by query expression.\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function filterByQuery(value: string): Object {\n  if (!value)\n    throw new Error('Required argument for `filterByQuery` is missing')\n\n  const encodedFilter = encodeURIComponent(value)\n  this.params.search.filterByQuery.push(encodedFilter)\n  return this\n}\n\n/**\n * Set the given `filter.facets` param used for filtering search results.\n *\n * @param  {string} value - A non-URI encoded string representing a\n * filter by query expression.\n * @throws If `value` is missing.\n * @return {Object} The instance of the service, can be chained.\n */\nexport function filterByFacets(value: string): Object {\n  if (!value)\n    throw new Error('Required argument for `filterByFacets` is missing')\n\n  const encodedFilter = encodeURIComponent(value)\n  this.params.search.filterByFacets.push(encodedFilter)\n  return this\n}\n","/* @flow */\nimport type {\n  ServiceBuilder,\n  ServiceBuilderDefinition,\n  ServiceBuilderParams,\n} from 'types/sdk'\n\nimport {\n  getDefaultQueryParams,\n  getDefaultSearchParams,\n  setDefaultParams,\n  setParams,\n} from './default-params'\nimport classify from './classify'\nimport buildQueryString from './build-query-string'\nimport withVersion from './version'\nimport withFullDataErasure from './data-erasure'\nimport applyOrderEditTo from './order-edit-apply'\nimport * as defaultFeatures from './features'\nimport * as query from './query'\nimport * as queryId from './query-id'\nimport * as queryLocation from './query-location'\nimport * as queryExpand from './query-expand'\nimport * as queryPage from './query-page'\nimport * as queryProjection from './query-projection'\nimport * as querySuggest from './query-suggest'\nimport * as querySearch from './query-search'\n\ntype UseKey = {\n  withProjectKey: boolean,\n  applyOrderEdit: boolean,\n}\n\nconst requiredDefinitionProps = ['type', 'endpoint', 'features']\n\nfunction getIdOrKey(params: Object): string {\n  if (params.id) return `/${params.id}`\n  if (params.key) return `/key=${params.key}`\n  return ''\n}\n\nexport default function createService(\n  definition: ServiceBuilderDefinition,\n  options: string = ''\n): ServiceBuilder {\n  if (!definition)\n    throw new Error('Cannot create a service without its definition.')\n\n  requiredDefinitionProps.forEach((key: string) => {\n    if (!definition[key])\n      throw new Error(`Definition is missing required parameter ${key}.`)\n  })\n\n  if (!Array.isArray(definition.features) || !definition.features.length)\n    throw new Error('Definition requires `features` to be a non empty array.')\n\n  if (!options)\n    throw new Error('No project defined. Please enter a project key')\n\n  const { type, endpoint, features } = definition\n\n  return classify({\n    type,\n    features,\n    params: getDefaultQueryParams(),\n    withVersion,\n    withFullDataErasure,\n    applyOrderEditTo,\n\n    ...features.reduce((acc: Object, feature: string): Object => {\n      if (feature === defaultFeatures.query)\n        return {\n          ...acc,\n          ...query,\n          ...queryPage,\n        }\n\n      if (feature === defaultFeatures.queryOne)\n        return {\n          ...acc,\n          ...queryId,\n        }\n\n      if (feature === defaultFeatures.queryLocation)\n        return {\n          ...acc,\n          ...queryLocation,\n        }\n\n      if (feature === defaultFeatures.queryExpand)\n        return {\n          ...acc,\n          ...queryExpand,\n        }\n\n      if (feature === defaultFeatures.search)\n        return {\n          ...acc,\n          ...querySearch,\n          ...queryPage,\n          params: getDefaultSearchParams(),\n        }\n\n      if (feature === defaultFeatures.suggest)\n        return {\n          ...acc,\n          ...querySearch,\n          ...queryPage,\n          ...querySuggest,\n        }\n\n      if (feature === defaultFeatures.projection)\n        return {\n          ...acc,\n          ...queryProjection,\n        }\n\n      return acc\n    }, {}),\n\n    // Call this method to get the built request URI\n    // Pass some options to further configure the URI:\n    // - `withProjectKey: false`: will omit the projectKey from the URI\n    build(\n      uriOptions: UseKey = { withProjectKey: true, applyOrderEdit: false }\n    ): string {\n      const { withProjectKey, applyOrderEdit } = uriOptions\n\n      const queryParams = buildQueryString(this.params)\n\n      const uri =\n        (withProjectKey ? `/${options}` : '') +\n        endpoint +\n        // TODO this can lead to invalid URIs as getIdOrKey can return\n        //   \"/?customerId\", so there can be multiple question marks,\n        // same for when `queryParams` and `version` are present\n        getIdOrKey(this.params) +\n        (queryParams && !applyOrderEdit ? `?${queryParams}` : queryParams)\n\n      setDefaultParams.call(this)\n      return uri\n    },\n\n    // Call this method to parse an object as params\n    parse(params: ServiceBuilderParams): Object {\n      setParams.call(this, params)\n      return this\n    },\n  })\n}\n","/**\n * Given an object, return a clone with non-function properties defined as\n * non-enumerable, unwritable, and unconfigurable.\n *\n * @param {Object}\n * @return {Object}\n */\nexport default function classify(object, forceEnumerable = false) {\n  const clone = {}\n\n  Object.keys(object).forEach(key => {\n    Object.defineProperty(clone, key, {\n      value: object[key],\n      enumerable: forceEnumerable ? true : typeof object[key] === 'function',\n    })\n  })\n\n  return clone\n}\n","/* @flow */\nimport type { ServiceBuilderDefaultParams } from 'types/sdk'\n\n/**\n * Build the query string with the given parameters.\n *\n * @param  {Object} params - An object with query / search parameters.\n * @throws If argument is missing.\n * @return {string} The fully encoded query string.\n */\nexport default function buildQueryString(\n  params: ServiceBuilderDefaultParams\n): string {\n  if (!params) throw new Error('Missing options object to build query string.')\n\n  const {\n    query,\n    pagination,\n    search,\n    expand,\n    staged,\n    priceCurrency,\n    priceCountry,\n    priceCustomerGroup,\n    priceChannel,\n    searchKeywords,\n    version,\n    customerId,\n    cartId,\n    location,\n    dataErasure,\n    applyOrderEditTo,\n  } = params\n  let queryString = []\n\n  if (customerId) queryString.push(`customerId=${customerId}`)\n\n  if (cartId) queryString.push(`cartId=${cartId}`)\n\n  if (typeof staged === 'boolean')\n    queryString.push(`staged=${staged.toString()}`)\n\n  if (priceCurrency) queryString.push(`priceCurrency=${priceCurrency}`)\n\n  if (priceCountry) queryString.push(`priceCountry=${priceCountry}`)\n\n  if (priceCustomerGroup)\n    queryString.push(`priceCustomerGroup=${priceCustomerGroup}`)\n\n  if (priceChannel) queryString.push(`priceChannel=${priceChannel}`)\n\n  if (expand && expand.length)\n    queryString = queryString.concat(\n      expand.map((e: string): string => `expand=${e}`)\n    )\n\n  if (query) {\n    const { operator, where } = query\n    const whereParams = where.join(encodeURIComponent(` ${operator} `))\n    if (whereParams) queryString.push(`where=${whereParams}`)\n  }\n\n  if (location) {\n    const { country, currency, state } = location\n    if (country) queryString.push(`country=${country}`)\n    if (currency) queryString.push(`currency=${currency}`)\n    if (state) queryString.push(`state=${state}`)\n  }\n\n  if (pagination) {\n    const { page, perPage, sort, withTotal } = pagination\n    if (typeof perPage === 'number') queryString.push(`limit=${perPage}`)\n    if (page) {\n      const limitParam = perPage || 20\n      const offsetParam = limitParam * (page - 1)\n      queryString.push(`offset=${offsetParam}`)\n    }\n    if (sort && sort.length)\n      queryString = queryString.concat(\n        sort.map((s: string): string => `sort=${s}`)\n      )\n\n    if (typeof withTotal === 'boolean')\n      queryString.push(`withTotal=${String(withTotal)}`)\n  }\n\n  if (search) {\n    const {\n      text,\n      fuzzy,\n      fuzzyLevel,\n      markMatchingVariants,\n      facet,\n      filter,\n      filterByQuery,\n      filterByFacets,\n    } = search\n\n    if (text) queryString.push(`text.${text.lang}=${text.value}`)\n    if (fuzzy) queryString.push('fuzzy=true')\n    if (fuzzyLevel) queryString.push(`fuzzyLevel=${fuzzyLevel}`)\n    queryString.push(`markMatchingVariants=${markMatchingVariants.toString()}`)\n\n    facet.forEach((f: string): number => queryString.push(`facet=${f}`))\n    filter.forEach((f: string): number => queryString.push(`filter=${f}`))\n    filterByQuery.forEach((f: string): number =>\n      queryString.push(`filter.query=${f}`)\n    )\n    filterByFacets.forEach((f: string): number =>\n      queryString.push(`filter.facets=${f}`)\n    )\n  }\n\n  if (searchKeywords)\n    searchKeywords.forEach((f: { lang: string, value: string }): number =>\n      queryString.push(`searchKeywords.${f.lang}=${f.value}`)\n    )\n\n  if (version) queryString.push(`version=${version}`)\n\n  if (dataErasure) queryString.push(dataErasure)\n\n  if (applyOrderEditTo) queryString.push(`/${applyOrderEditTo}/apply`)\n\n  return queryString.join('&')\n}\n","/* @flow */\nimport type { ApiRequestBuilder } from 'types/sdk'\n\nimport services from './default-services'\nimport createService from './create-service'\n\n// pass an options argument of type object containing\n// the `projectkey` (string) and `customServices` (object)\n// The projectKey property is required\n// A sample options object would be:\n//\n//     options: {\n//       projectKey: 'myProject',\n//       customServices: {\n//         foo: {\n//           type: 'foo',\n//           endpoint: '/foo',\n//           features: [\n//             features.query,\n//           ],\n//         }\n//       }\n//     }\nexport default function createRequestBuilder(\n  options: Object = {}\n): ApiRequestBuilder {\n  const allServices = { ...services, ...options.customServices }\n\n  return Object.keys(allServices).reduce(\n    // a return type object is not allowed in flow due to a bug (https://github.com/facebook/flow/issues/5182)\n    /* eslint-disable-next-line */\n    // $FlowFixMe\n    (acc: {}, key: string) => ({\n      ...acc,\n      [key]: createService(allServices[key], options.projectKey),\n    }),\n    {}\n  )\n}\n"],"names":["create","update","del","query","queryOne","queryExpand","queryLocation","search","projection","suggest","login","type","endpoint","features","cartDiscounts","carts","categories","channels","customerGroups","customers","customersPassword","customersPasswordToken","customersPasswordReset","customersEmailVerificationToken","customersEmailVerification","customObjects","discountCodes","extensions","inventory","messages","myActiveCart","myCarts","myOrders","orders","orderEdits","orderImport","payments","productDiscounts","productProjections","productProjectionsSearch","productProjectionsSuggest","products","productTypes","project","reviews","shippingMethods","shoppingLists","states","subscriptions","taxCategories","types","zones","hasKey","obj","key","Object","prototype","hasOwnProperty","call","withVersion","version","Error","params","this","withFullDataErasure","dataErasure","applyOrderEditTo","orderEditId","predicate","encodedPredicate","encodeURIComponent","where","push","operator","id","customerId","cartId","custId","value","location","country","currency","state","encodedPath","expand","sortPath","ascending","direction","encodedSort","pagination","sort","page","perPage","withTotal","shouldFetchStaged","staged","priceCurrency","priceCountry","priceCustomerGroup","priceChannel","lang","searchKeywords","text","fuzzy","fuzzyLevel","markMatchingVariants","encodedFacet","facet","encodedFilter","filter","filterByQuery","filterByFacets","requiredDefinitionProps","createService","definition","options","forEach","Array","isArray","length","object","forceEnumerable","clone","keys","defineProperty","enumerable","classify","reduce","acc","feature","defaultFeatures","queryPage","queryId","querySearch","querySuggest","queryProjection","build","uriOptions","withProjectKey","applyOrderEdit","queryParams","queryString","toString","concat","map","e","whereParams","join","offsetParam","s","String","f","buildQueryString","uri","getIdOrKey","includes","parse","knownKeys","expansion","_this","byId","byKey","byCustomerId","byCartId","byCountry","byCurrency","byState","sortDesc","by","language","searchKeyword","whereOperator","allServices","services","customServices","projectKey"],"mappings":"6uBASO,IAAMA,EAAS,SACTC,EAAS,SAETC,EAAM,SAQNC,EAAQ,QACRC,EAAW,WACXC,EAAc,cACdC,EAAgB,gBAChBC,EAAS,SACTC,EAAa,aACbC,EAAU,wICxBR,CACbC,MAAO,CACLC,KAAM,QACNC,SAAU,SACVC,SAAU,CAACA,IAEbC,cAAe,CACbH,KAAM,iBACNC,SAAU,kBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJE,MAAO,CACLJ,KAAM,QACNC,SAAU,SACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJG,WAAY,CACVL,KAAM,aACNC,SAAU,cACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJI,SAAU,CACRN,KAAM,WACNC,SAAU,YACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJK,eAAgB,CACdP,KAAM,kBACNC,SAAU,mBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJM,UAAW,CACTR,KAAM,YACNC,SAAU,aACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJO,kBAAmB,CACjBT,KAAM,qBACNC,SAAU,sBACVC,SAAU,CAACA,IAEbQ,uBAAwB,CACtBV,KAAM,2BACNC,SAAU,4BACVC,SAAU,CAACA,EAAiBA,IAE9BS,uBAAwB,CACtBX,KAAM,2BACNC,SAAU,4BACVC,SAAU,CAACA,IAEbU,gCAAiC,CAC/BZ,KAAM,qCACNC,SAAU,mCACVC,SAAU,CAACA,EAAiBA,IAE9BW,2BAA4B,CAC1Bb,KAAM,+BACNC,SAAU,qCACVC,SAAU,CAACA,IAEbY,cAAe,CACbd,KAAM,iBACNC,SAAU,kBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,IAGJa,cAAe,CACbf,KAAM,iBACNC,SAAU,kBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJc,WAAY,CACVhB,KAAM,aACNC,SAAU,cACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJe,UAAW,CACTjB,KAAM,YACNC,SAAU,aACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJgB,SAAU,CACRlB,KAAM,WACNC,SAAU,YACVC,SAAU,CAACA,EAAgBA,EAAmBA,IAEhDiB,aAAc,CACZnB,KAAM,WACNC,SAAU,kBACVC,SAAU,CAACA,IAEbkB,QAAS,CACPpB,KAAM,WACNC,SAAU,YACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJmB,SAAU,CACRrB,KAAM,YACNC,SAAU,aACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJoB,OAAQ,CACNtB,KAAM,SACNC,SAAU,UACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJqB,WAAY,CACVvB,KAAM,eACNC,SAAU,gBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJsB,YAAa,CACXxB,KAAM,cACNC,SAAU,iBACVC,SAAU,CAACA,EAAiBA,IAE9BuB,SAAU,CACRzB,KAAM,WACNC,SAAU,YACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJwB,iBAAkB,CAChB1B,KAAM,oBACNC,SAAU,qBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJyB,mBAAoB,CAClB3B,KAAM,sBACNC,SAAU,uBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,IAGJ0B,yBAA0B,CACxB5B,KAAM,6BACNC,SAAU,8BACVC,SAAU,CACRA,EACAA,EACAA,EACAA,IAGJ2B,0BAA2B,CACzB7B,KAAM,8BACNC,SAAU,+BACVC,SAAU,CACRA,EACAA,EACAA,EACAA,IAGJ4B,SAAU,CACR9B,KAAM,WACNC,SAAU,YACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJ6B,aAAc,CACZ/B,KAAM,gBACNC,SAAU,iBACVC,SAAU,CACRA,EACAA,EACAA,EACAA,EACAA,EACAA,IAGJ8B,QAAS,CACPhC,KAAM,UACNC,SAAU,IACVC,SAAU,CAACA,EAAiB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"}