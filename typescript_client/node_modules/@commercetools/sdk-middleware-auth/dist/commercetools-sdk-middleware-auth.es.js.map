{"version":3,"file":"commercetools-sdk-middleware-auth.es.js","sources":["../src/scopes.js","../src/build-requests.js","../src/base-auth-flow.js","../src/utils.js","../src/client-credentials-flow.js","../src/password-flow.js","../src/refresh-token-flow.js","../src/anonymous-session-flow.js","../src/existing-token.js"],"sourcesContent":["export const MANAGE_PROJECT = 'manage_project'\nexport const MANAGE_PRODUCTS = 'manage_products'\nexport const VIEW_PRODUCTS = 'view_products'\nexport const MANAGE_ORDERS = 'manage_orders'\nexport const VIEW_ORDERS = 'view_orders'\nexport const MANAGE_MY_ORDERS = 'manage_my_orders'\nexport const MANAGE_CUSTOMERS = 'manage_customers'\nexport const VIEW_CUSTOMERS = 'view_customers'\nexport const MANAGE_MY_PROFILE = 'manage_my_profile'\nexport const MANAGE_TYPES = 'manage_types'\nexport const VIEW_TYPES = 'view_types'\nexport const MANAGE_PAYMENTS = 'manage_payments'\nexport const VIEW_PAYMENTS = 'view_payments'\nexport const CREATE_ANONYMOUS_TOKEN = 'create_anonymous_token'\nexport const MANAGE_SUBSCRIPTIONS = 'manage_subscriptions'\n","/* @flow */\nimport type {\n  AuthMiddlewareOptions,\n  PasswordAuthMiddlewareOptions,\n  RefreshAuthMiddlewareOptions,\n} from 'types/sdk'\n\nimport * as authScopes from './scopes'\n\ntype BuiltRequestParams = {\n  basicAuth: string,\n  url: string,\n  body: string,\n}\n\n// POST https://{host}/oauth/token?grant_type=client_credentials&scope={scope}\n// Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nexport function buildRequestForClientCredentialsFlow(\n  options: AuthMiddlewareOptions\n): BuiltRequestParams {\n  if (!options) throw new Error('Missing required options')\n\n  if (!options.host) throw new Error('Missing required option (host)')\n\n  if (!options.projectKey)\n    throw new Error('Missing required option (projectKey)')\n\n  if (!options.credentials)\n    throw new Error('Missing required option (credentials)')\n\n  const { clientId, clientSecret } = options.credentials\n\n  if (!(clientId && clientSecret))\n    throw new Error('Missing required credentials (clientId, clientSecret)')\n\n  const defaultScope = `${authScopes.MANAGE_PROJECT}:${options.projectKey}`\n  const scope = (options.scopes || [defaultScope]).join(' ')\n\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString(\n    'base64'\n  )\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  const oauthUri = options.oauthUri || '/oauth/token'\n  const url = options.host.replace(/\\/$/, '') + oauthUri\n  const body = `grant_type=client_credentials&scope=${scope}`\n\n  return { basicAuth, url, body }\n}\n\nexport function buildRequestForPasswordFlow(\n  options: PasswordAuthMiddlewareOptions\n): BuiltRequestParams {\n  if (!options) throw new Error('Missing required options')\n\n  if (!options.host) throw new Error('Missing required option (host)')\n\n  if (!options.projectKey)\n    throw new Error('Missing required option (projectKey)')\n\n  if (!options.credentials)\n    throw new Error('Missing required option (credentials)')\n\n  const { clientId, clientSecret, user } = options.credentials\n  const pKey = options.projectKey\n  if (!(clientId && clientSecret && user))\n    throw new Error(\n      'Missing required credentials (clientId, clientSecret, user)'\n    )\n  const { username, password } = user\n  if (!(username && password))\n    throw new Error('Missing required user credentials (username, password)')\n\n  const scope = (options.scopes || []).join(' ')\n  const scopeStr = scope ? `&scope=${scope}` : ''\n\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString(\n    'base64'\n  )\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  const oauthUri = options.oauthUri || `/oauth/${pKey}/customers/token`\n  const url = options.host.replace(/\\/$/, '') + oauthUri\n  // eslint-disable-next-line max-len\n  // encode username and password as requested by platform\n  const body = `grant_type=password&username=${encodeURIComponent(\n    username\n  )}&password=${encodeURIComponent(password)}${scopeStr}`\n\n  return { basicAuth, url, body }\n}\n\nexport function buildRequestForRefreshTokenFlow(\n  options: RefreshAuthMiddlewareOptions\n): BuiltRequestParams {\n  if (!options) throw new Error('Missing required options')\n\n  if (!options.host) throw new Error('Missing required option (host)')\n\n  if (!options.projectKey)\n    throw new Error('Missing required option (projectKey)')\n\n  if (!options.credentials)\n    throw new Error('Missing required option (credentials)')\n\n  if (!options.refreshToken)\n    throw new Error('Missing required option (refreshToken)')\n\n  const { clientId, clientSecret } = options.credentials\n\n  if (!(clientId && clientSecret))\n    throw new Error('Missing required credentials (clientId, clientSecret)')\n\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString(\n    'base64'\n  )\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  const oauthUri = options.oauthUri || '/oauth/token'\n  const url = options.host.replace(/\\/$/, '') + oauthUri\n  const body = `grant_type=refresh_token&refresh_token=${encodeURIComponent(\n    options.refreshToken\n  )}`\n\n  return { basicAuth, url, body }\n}\n\nexport function buildRequestForAnonymousSessionFlow(\n  options: AuthMiddlewareOptions\n): BuiltRequestParams {\n  if (!options) throw new Error('Missing required options')\n\n  if (!options.projectKey)\n    throw new Error('Missing required option (projectKey)')\n  const pKey = options.projectKey\n  // eslint-disable-next-line no-param-reassign\n  options.oauthUri = options.oauthUri || `/oauth/${pKey}/anonymous/token`\n  const result = buildRequestForClientCredentialsFlow(options)\n\n  if (options.credentials.anonymousId)\n    result.body += `&anonymous_id=${options.credentials.anonymousId}`\n\n  return { ...result }\n}\n","/* @flow */\n\nimport type {\n  MiddlewareRequest,\n  Next,\n  Task,\n  AuthMiddlewareBaseOptions,\n  PasswordAuthMiddlewareOptions,\n  AuthMiddlewareOptions,\n  executeRequestOptions,\n} from 'types/sdk'\nimport { buildRequestForRefreshTokenFlow } from './build-requests'\n\nfunction mergeAuthHeader(\n  token: string,\n  req: MiddlewareRequest\n): MiddlewareRequest {\n  return {\n    ...req,\n    headers: {\n      ...req.headers,\n      Authorization: `Bearer ${token}`,\n    },\n  }\n}\n\nfunction calculateExpirationTime(expiresIn: number): number {\n  return (\n    Date.now() +\n    expiresIn * 1000 -\n    // Add a gap of 2 hours before expiration time.\n    2 * 60 * 60 * 1000\n  )\n}\n\nfunction executeRequest({\n  fetcher,\n  url,\n  basicAuth,\n  body,\n  tokenCache,\n  requestState,\n  pendingTasks,\n  response,\n}: executeRequestOptions) {\n  fetcher(url, {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${basicAuth}`,\n      'Content-Length': Buffer.byteLength(body).toString(),\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body,\n  })\n    .then((res: Response): Promise<*> => {\n      if (res.ok)\n        return res\n          .json()\n          .then(\n            ({\n              access_token: token,\n              expires_in: expiresIn,\n              refresh_token: refreshToken,\n            }: Object) => {\n              const expirationTime = calculateExpirationTime(expiresIn)\n\n              // Cache new token\n              tokenCache.set({ token, expirationTime, refreshToken })\n\n              // Dispatch all pending requests\n              requestState.set(false)\n\n              // Freeze and copy pending queue, reset original one for accepting\n              // new pending tasks\n              const executionQueue = pendingTasks.slice()\n              // eslint-disable-next-line no-param-reassign\n              pendingTasks = []\n              executionQueue.forEach((task: Task) => {\n                // Assign the new token in the request header\n                const requestWithAuth = mergeAuthHeader(token, task.request)\n                // console.log('test', cache, pendingTasks)\n                // Continue by calling the task's own next function\n                task.next(requestWithAuth, task.response)\n              })\n            }\n          )\n\n      // Handle error response\n      return res.text().then((text: any) => {\n        let parsed\n        try {\n          parsed = JSON.parse(text)\n        } catch (error) {\n          /* noop */\n        }\n        const error: Object = new Error(parsed ? parsed.message : text)\n        if (parsed) error.body = parsed\n        response.reject(error)\n      })\n    })\n    .catch((error: Error) => {\n      if (response && typeof response.reject === 'function')\n        response.reject(error)\n    })\n}\n\nexport default function authMiddlewareBase(\n  {\n    request,\n    response,\n    url,\n    basicAuth,\n    body,\n    pendingTasks,\n    requestState,\n    tokenCache,\n    fetch: fetcher,\n  }: AuthMiddlewareBaseOptions,\n  next: Next,\n  userOptions?: AuthMiddlewareOptions | PasswordAuthMiddlewareOptions\n) {\n  if (!fetcher && typeof fetch === 'undefined')\n    throw new Error(\n      '`fetch` is not available. Please pass in `fetch` as an option or have it globally available.'\n    )\n  if (!fetcher)\n    // eslint-disable-next-line\n    fetcher = fetch\n  // Check if there is already a `Authorization` header in the request.\n  // If so, then go directly to the next middleware.\n  if (\n    (request.headers && request.headers.authorization) ||\n    (request.headers && request.headers.Authorization)\n  ) {\n    next(request, response)\n    return\n  }\n  // If there was a token in the tokenCache, and it's not expired, append\n  // the token in the `Authorization` header.\n  const tokenObj = tokenCache.get()\n  if (tokenObj && tokenObj.token && Date.now() < tokenObj.expirationTime) {\n    const requestWithAuth = mergeAuthHeader(tokenObj.token, request)\n    next(requestWithAuth, response)\n    return\n  }\n  // Keep pending tasks until a token is fetched\n  // Save next function as well, to call it once the token has been fetched, which prevents\n  // unexpected behaviour in a context in which the next function uses global vars\n  // or Promises to capture the token to hand it to other libraries, e.g. Apollo\n  pendingTasks.push({ request, response, next })\n\n  // If a token is currently being fetched, just wait ;)\n  if (requestState.get()) return\n\n  // Mark that a token is being fetched\n  requestState.set(true)\n\n  // If there was a refreshToken in the tokenCache, and there was an expired\n  // token or no token in the tokenCache, use the refreshToken flow\n  if (\n    tokenObj &&\n    tokenObj.refreshToken &&\n    (!tokenObj.token ||\n      (tokenObj.token && Date.now() > tokenObj.expirationTime))\n  ) {\n    executeRequest({\n      fetcher,\n      ...buildRequestForRefreshTokenFlow({\n        ...userOptions,\n        refreshToken: tokenObj.refreshToken,\n      }),\n      tokenCache,\n      requestState,\n      pendingTasks,\n      response,\n    })\n    return\n  }\n\n  // Token and refreshToken are not present or invalid. Request a new token...\n  executeRequest({\n    fetcher,\n    url,\n    basicAuth,\n    body,\n    tokenCache,\n    requestState,\n    pendingTasks,\n    response,\n  })\n}\n","export default function store(initVal) {\n  let value = initVal\n  return {\n    get: () => value,\n    set: val => {\n      value = val\n      return value\n    },\n  }\n}\n","/* @flow */\nimport type {\n  AuthMiddlewareOptions,\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  Next,\n  Task,\n} from 'types/sdk'\n\nimport { buildRequestForClientCredentialsFlow } from './build-requests'\nimport authMiddlewareBase from './base-auth-flow'\nimport store from './utils'\n\nexport default function createAuthMiddlewareForClientCredentialsFlow(\n  options: AuthMiddlewareOptions\n): Middleware {\n  const tokenCache = store({})\n  const pendingTasks: Array<Task> = []\n\n  const requestState = store(false)\n  return (next: Next): Next => (\n    request: MiddlewareRequest,\n    response: MiddlewareResponse\n  ) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (\n      (request.headers && request.headers.authorization) ||\n      (request.headers && request.headers.Authorization)\n    ) {\n      next(request, response)\n      return\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForClientCredentialsFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch,\n    }\n    authMiddlewareBase(params, next)\n  }\n}\n","/* @flow */\nimport type {\n  PasswordAuthMiddlewareOptions,\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  Next,\n  Task,\n} from 'types/sdk'\n\nimport { buildRequestForPasswordFlow } from './build-requests'\nimport authMiddlewareBase from './base-auth-flow'\nimport store from './utils'\n\nexport default function createAuthMiddlewareForPasswordFlow(\n  options: PasswordAuthMiddlewareOptions\n): Middleware {\n  const tokenCache = store({})\n  const pendingTasks: Array<Task> = []\n  const requestState = store(false)\n\n  return (next: Next): Next => (\n    request: MiddlewareRequest,\n    response: MiddlewareResponse\n  ) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (\n      (request.headers && request.headers.authorization) ||\n      (request.headers && request.headers.Authorization)\n    ) {\n      next(request, response)\n      return\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForPasswordFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch,\n    }\n    authMiddlewareBase(params, next, options)\n  }\n}\n","/* @flow */\nimport type {\n  RefreshAuthMiddlewareOptions,\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  Next,\n  Task,\n} from 'types/sdk'\n\nimport { buildRequestForRefreshTokenFlow } from './build-requests'\nimport authMiddlewareBase from './base-auth-flow'\nimport store from './utils'\n\nexport default function createAuthMiddlewareForRefreshTokenFlow(\n  options: RefreshAuthMiddlewareOptions\n): Middleware {\n  const tokenCache = store({})\n  const pendingTasks: Array<Task> = []\n\n  const requestState = store(false)\n  return (next: Next): Next => (\n    request: MiddlewareRequest,\n    response: MiddlewareResponse\n  ) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (\n      (request.headers && request.headers.authorization) ||\n      (request.headers && request.headers.Authorization)\n    ) {\n      next(request, response)\n      return\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForRefreshTokenFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch,\n    }\n    authMiddlewareBase(params, next)\n  }\n}\n","/* @flow */\nimport type {\n  AuthMiddlewareOptions,\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  Next,\n  Task,\n} from 'types/sdk'\n\nimport { buildRequestForAnonymousSessionFlow } from './build-requests'\nimport authMiddlewareBase from './base-auth-flow'\nimport store from './utils'\n\nexport default function createAuthMiddlewareForAnonymousSessionFlow(\n  options: AuthMiddlewareOptions\n): Middleware {\n  const tokenCache = store({})\n  const pendingTasks: Array<Task> = []\n\n  const requestState = store(false)\n  return (next: Next): Next => (\n    request: MiddlewareRequest,\n    response: MiddlewareResponse\n  ) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (\n      (request.headers && request.headers.authorization) ||\n      (request.headers && request.headers.Authorization)\n    ) {\n      next(request, response)\n      return\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForAnonymousSessionFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch,\n    }\n    authMiddlewareBase(params, next, options)\n  }\n}\n","/* @flow */\nimport type {\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  ExistingTokenMiddlewareOptions,\n  Next,\n} from 'types/sdk'\n\nexport default function createAuthMiddlewareWithExistingToken(\n  authorization: string = '',\n  options: ExistingTokenMiddlewareOptions = {}\n): Middleware {\n  return (next: Next): Next => (\n    request: MiddlewareRequest,\n    response: MiddlewareResponse\n  ): mixed => {\n    if (typeof authorization !== 'string')\n      throw new Error('authorization must be a string')\n    const force = options.force === undefined ? true : options.force\n\n    /** The request will not be modified if:\n     *  1. no argument is passed\n     *  2. force is false and authorization header exists\n     */\n    if (\n      !authorization ||\n      (((request.headers && request.headers.authorization) ||\n        (request.headers && request.headers.Authorization)) &&\n        force === false)\n    ) {\n      return next(request, response)\n    }\n    const requestWithAuth = {\n      ...request,\n      headers: {\n        ...request.headers,\n        Authorization: authorization,\n      },\n    }\n    return next(requestWithAuth, response)\n  }\n}\n"],"names":["MANAGE_PROJECT","MANAGE_PRODUCTS","VIEW_PRODUCTS","MANAGE_ORDERS","VIEW_ORDERS","MANAGE_MY_ORDERS","MANAGE_CUSTOMERS","VIEW_CUSTOMERS","MANAGE_MY_PROFILE","MANAGE_TYPES","VIEW_TYPES","MANAGE_PAYMENTS","VIEW_PAYMENTS","CREATE_ANONYMOUS_TOKEN","MANAGE_SUBSCRIPTIONS","buildRequestForClientCredentialsFlow","options","Error","host","projectKey","credentials","clientId","clientSecret","defaultScope","authScopes","scope","scopes","join","basicAuth","Buffer","from","toString","oauthUri","url","replace","body","buildRequestForPasswordFlow","user","pKey","username","password","scopeStr","encodeURIComponent","buildRequestForRefreshTokenFlow","refreshToken","buildRequestForAnonymousSessionFlow","result","anonymousId","mergeAuthHeader","token","req","headers","Authorization","calculateExpirationTime","expiresIn","Date","now","executeRequest","fetcher","tokenCache","requestState","pendingTasks","response","method","byteLength","then","res","ok","json","access_token","expires_in","refresh_token","expirationTime","set","executionQueue","slice","forEach","task","requestWithAuth","request","next","text","parsed","JSON","parse","error","message","reject","catch","authMiddlewareBase","userOptions","fetch","authorization","tokenObj","get","push","store","initVal","value","val","createAuthMiddlewareForClientCredentialsFlow","params","createAuthMiddlewareForPasswordFlow","createAuthMiddlewareForRefreshTokenFlow","createAuthMiddlewareForAnonymousSessionFlow","createAuthMiddlewareWithExistingToken","force","undefined"],"mappings":"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"}