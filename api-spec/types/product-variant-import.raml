#%RAML 1.0 Library
usage: Product variant import types.
(generator.package): productvariants

uses:
  common: common.raml
  generator: ../annotationTypes/generator.raml

types:
  Attribute:
    description: |
      This abstract type is the base for specific attribute types. The concrete type is derived
      from the type discriminator.
      An attribute matches an attribute definition of a CTP product type by name.
      The value can have different types, but must match the type of the matching attribute defintion.
    discriminator: type
    properties:
        name?:
          description: |
            For now we reuse this type in two different context. And that's why the name is required when used in the full import.
            And why the name isn't required when used in patch.
          type: string
        type:
          type: string
  AnyAttribute:
    description: |
      This type allows to send any json object as value and is mainly intended to ease the migration from the CTP api.
    type: Attribute
    discriminatorValue: any
    properties:
        value:
          type: any
  BooleanAttribute:
    type: Attribute
    discriminatorValue: boolean
    properties:
        value:
          type: boolean
  DateAttribute:
    type: Attribute
    discriminatorValue: date
    properties:
        value:
          type: date-only
  DateTimeAttribute:
    type: Attribute
    discriminatorValue: datetime
    properties:
        value:
          type: datetime
  EnumAttribute:
    type: Attribute
    discriminatorValue: enum
    properties:
        value:
          type: common.EnumValue
  LocalizableEnumAttribute:
    type: Attribute
    discriminatorValue: lenum
    properties:
        value:
          type: common.LocalizedEnumValue
  LocalizableTextAttribute:
    type: Attribute
    discriminatorValue: ltext
    properties:
        value:
          type: common.LocalizedString
  MoneyAttribute:
    type: Attribute
    discriminatorValue: money
    properties:
        value:
          type: common.Money
  NumberAttribute:
    type: Attribute
    discriminatorValue: number
    properties:
        value:
          type: number
  TextAttribute:
    type: Attribute
    discriminatorValue: text
    properties:
        value:
          type: string
  TimeAttribute:
    type: Attribute
    discriminatorValue: time
    properties:
        value:
          type: time-only
  ProductVariantImport:
    type: common.ImportResource
    properties:
        sku?:
          type: string
        isMasterVariant:
          type: boolean
        attributes?:
          type: Attribute[]
        images?:
          type: common.Image[]
        assets?:
          type: common.Asset[]
        product:
          description: |
            The product in which this product variant is contained.
          (common.ReferenceType): product
          type: common.ImportReference
  ProductVariantPatch:
    description: |
      This type allows partial updates of already existing product variants.
    properties:
        productVariant:
          description: The product variant to which this patch is applied.
          type: common.ImportReference
        attributes?:
          type: Attributes
  Attributes:
    properties:
      //:
        description: |
          The name of the attribute is given by the key and shouldn't be set on the attribute itself.
          And since this property will be represented as a map, we can set individual attributes to null
          to delete them (following JSON Merge Patch semantic).
        type: Attribute | nil