import java.nio.file.Paths

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id "org.jetbrains.kotlin.kapt" version "1.3.61"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply plugin: 'com.github.johnrengelman.shadow'

publishing {
    publications {
        Maven(MavenPublication) {
            publication -> project.shadow.component(publication)
        }
    }
}

String dire = buildDir.toString() + "/gensrc/main/kotlin/io/vrap/rmf/codegen/cli/info"

dependencies {
    compile project(':languages:javalang:java-renderer')
    compile project(':languages:typescript')
    compile project(':languages:postman')
    compile project(':languages:php')
    compile project(':languages:ramldoc')

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'com.google.guava:guava:27.0.1-jre'
    compile 'info.picocli:picocli:4.2.0'
    kapt 'info.picocli:picocli-codegen:4.2.0'
}



shadowJar {
    manifest {
        attributes 'Main-Class': 'io.vrap.rmf.codegen.cli.MainKt'
    }
    append "plugin.properties"
    archiveFileName = 'rmf-gen.jar'
    minimize()
    destinationDirectory = file("../..")
}

task generateBuildInfo {
    doFirst {
        mkdir(dire)
        file(Paths.get("$dire/BuildInfo.kt")).text = """
package io.vrap.rmf.codegen.cli.info

object BuildInfo {
    const val VERSION = "$version"
}
"""

    }
}

compileKotlin.dependsOn generateBuildInfo
tasks.build.dependsOn tasks.shadowJar

sourceSets.main.kotlin.srcDirs += "${buildDir}/gensrc/main/kotlin/"